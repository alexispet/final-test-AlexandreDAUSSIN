name: cicd
run-name: Build the project
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci

  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ["chrome", "edge"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}node-${{ hashFiles('**/package-lock.json') }}
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          install: false
          start: npm start
          browser: ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Cypress videos ${{ matrix.browser }}
          path: cypress/videos

  deploy-server:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/next

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}