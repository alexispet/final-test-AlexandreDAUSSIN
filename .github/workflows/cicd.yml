name: cicd
run-name: Deploy the project
on: [push]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build_and_push_image:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tpdevops

            - name: Build and push Docker image
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    deploy-production:
        needs: [build_and_push_image]
        name: Déploiement sur le serveur de production
        if: github.ref_name == 'main'
        environment:
            name: production
            url: http://ec2-3-95-31-144.compute-1.amazonaws.com:80
        runs-on: ubuntu-latest
        steps:
            - uses: webfactory/ssh-agent@v0.8.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}
            - run: |
                ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                cd prod && \
                sudo docker compose -f docker-compose.prod.yml up --pull always -d"
            - name: Shoutrrr
              uses: containrrr/shoutrrr-action@v1
              with:
                url: discord://zeRs60SJTzoVWw2aM5Lt7ITZ0kLN9KM_v7Ju6JeeeYkxN8-j23BfJ3i-Vh3Xh9zCvhOE@1197892329915305994
                title: Deployed prod
                message: See changes at ${{ github.eveny.compare }}

    deploy-developement:
      needs: [build_and_push_image]
      name: Déploiement sur le serveur de dev
      if: github.ref_name == 'develop'
      environment:
          name: DEV
          url: http://ec2-3-95-31-144.compute-1.amazonaws.com:3000
      runs-on: ubuntu-latest
      steps:
          - uses: webfactory/ssh-agent@v0.8.0
            with:
                ssh-private-key: ${{ secrets.SSH_KEY }}
          - run: |
              ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
              cd dev && \
              sudo docker compose -f docker-compose.dev.yml up --pull always"
          - name: Shoutrrr
            uses: containrrr/shoutrrr-action@v1
            with:
                url: discord://zeRs60SJTzoVWw2aM5Lt7ITZ0kLN9KM_v7Ju6JeeeYkxN8-j23BfJ3i-Vh3Xh9zCvhOE@1197892329915305994
                title: Deployed dev
                message: See changes at ${{ github.event.compare }}
    
    lint:
      runs-on: ubuntu-latest
      continue-on-error: true
      permissions:
        contents: read
        packages: read
        statuses: write
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Super-linter
          uses: super-linter/super-linter@v5.7.2
          env:
            DEFAULT_BRANCH: main
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}