services:
  express:
    image: ghcr.io/alexispet/final-test-alexandredaussin/tpdevops:develop
    environment:
      NODE_ENV: DEV
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    ports:
      - "3000:3000"
    depends_on:
        db:
          condition: service_healthy
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.express-dev.rule=Host(ec2-3-95-31-144.compute-1.amazonaws.com)"
      - "traefik.http.routers.express-dev.entrypoints=dev,websecure"
      - "traefik.http.routers.express-dev.tls=true"

  db:
    image: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - "./docker/mysql/data:/var/lib/mysql"
    ports:
      - 3307:3306
    healthcheck:
      test: "/usr/bin/mysql --user=userops --password=userops --execute \"SHOW DATABASES;\""
      interval: 1m
      timeout: 20s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8081:8080

  traefik:
    image: traefik:v2.10
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.dev.address=:3000"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=alexandre.daussin@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"

    ports:
      - "3000:3000"
      - "443:443"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"